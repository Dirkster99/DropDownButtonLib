<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:chrome="clr-namespace:DropDownButtonLib.Controls.Chromes"
                    xmlns:local="clr-namespace:DropDownButtonLib.Controls"
                    xmlns:conv="clr-namespace:DropDownButtonLib.Converters"
                    xmlns:reskeys="clr-namespace:DropDownButtonLib.Themes">

    <conv:InverseBoolConverter x:Key="InverseBoolConverter" />

    <!-- =============================================================================== -->
    <!-- SplitItemsButton                                                                -->
    <!-- =============================================================================== -->
    <Style TargetType="{x:Type local:SplitItemsButton}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ButtonNormalBackgroundKey}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static reskeys:ResourceKeys.ControlNormalBorderKey}}" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="TemplateOfItemControl">
            <Setter.Value>
                <ControlTemplate TargetType="ItemsControl">
                    <ItemsPresenter/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SplitItemsButton}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="True">
                        <chrome:ButtonChrome x:Name="ControlChrome"
                                       Background="{TemplateBinding Background}"
                                       RenderEnabled="{TemplateBinding IsEnabled}" CornerRadius="2.75">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Button x:Name="PART_ActionButton" Margin="0"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Padding="{TemplateBinding Padding}" >
                                    <Button.Template>
                                        <ControlTemplate TargetType="Button">
                                            <ContentPresenter />
                                        </ControlTemplate>
                                    </Button.Template>
                                    <Grid>
                                        <!-- CornerRadius="2.75, 0, 0, 2.75" -->
                                        <chrome:ButtonChrome x:Name="ActionButtonChrome"
                                                             BorderThickness="0"
                                                             CornerRadius="0"
                                                             RenderEnabled="{TemplateBinding IsEnabled}"
										                     RenderMouseOver="{Binding IsMouseOver, ElementName=PART_ActionButton}"
										                     RenderPressed="{Binding IsPressed, ElementName=PART_ActionButton}"
                                                             >
                                            <ContentPresenter Name="ActionButtonContent"
                                                   Margin="{TemplateBinding Padding}"
                                                   Content="{TemplateBinding Content}"
                                                   ContentTemplate="{TemplateBinding ContentTemplate}"
                                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="true" />
                                        </chrome:ButtonChrome>
                                    </Grid>
                                </Button>
                                <ToggleButton x:Name="PART_ToggleButton"
                                              Grid.Column="1"
                                              IsTabStop="False"
                                              IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                              IsHitTestVisible="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}}">
                                    <ToggleButton.Template>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <ContentPresenter />
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                    <Grid>
                                        <!-- CornerRadius="0, 2.75, 2.75, 0" -->
                                        <chrome:ButtonChrome x:Name="ToggleButtonChrome"
                                                             Padding="1,0,1,0"
                                                             CornerRadius="0"
                                                             RenderChecked="{TemplateBinding IsOpen}"
                                                             RenderEnabled="{TemplateBinding IsEnabled}"
          								                     RenderMouseOver="{Binding IsMouseOver, ElementName=PART_ToggleButton}"
          								                     RenderPressed="{Binding IsPressed, ElementName=PART_ToggleButton}">
                                            <Grid x:Name="arrowGlyph" IsHitTestVisible="False" Margin="4,3,4,3">
                                                <Path x:Name="Arrow"
                                                      Width="7"
                                                      Height="4"
                                                      Data="M 0,1 C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1 z"
                                                      Fill="{DynamicResource {x:Static reskeys:ResourceKeys.GlyphNormalForegroundKey}}" />
                                            </Grid>
                                        </chrome:ButtonChrome>
                                    </Grid>
                                </ToggleButton>
                            </Grid>
                        </chrome:ButtonChrome>

                        <Popup x:Name="PART_Popup" 
                               HorizontalOffset="1"
                               VerticalOffset="1"
                               AllowsTransparency="True"
                               StaysOpen="False"
                               Placement="Bottom"
                               Focusable="False"
                               MaxHeight="{Binding Path=DropDownMaxHeight, RelativeSource={RelativeSource FindAncestor, AncestorType=local:DropDownItemsButton, AncestorLevel=1}}"
                               MaxWidth="{Binding Path=DropDownMaxWidth, RelativeSource={RelativeSource FindAncestor, AncestorType=local:DropDownItemsButton, AncestorLevel=1}}"
                               IsOpen="{Binding IsChecked, ElementName=PART_ToggleButton}"
                             >
                            <Grid Background="{DynamicResource {x:Static reskeys:ResourceKeys.DropDownList_BackgroundKey}}">
                                <Border BorderThickness="1"
                        Margin="1"
                        Background="{DynamicResource {x:Static reskeys:ResourceKeys.DropDownList_BackgroundKey}}"
                        BorderBrush="{DynamicResource {x:Static reskeys:ResourceKeys.DropDownList_BorderForegroundKey}}">
                                    <ScrollViewer VerticalScrollBarVisibility="Auto"
                                                  CanContentScroll="True"
                                                  HorizontalAlignment="Left"
                                                  Margin="1">
                                        <ItemsControl x:Name="PART_ItemsControl"
                                                      ItemsSource="{Binding Path=ItemsSource, RelativeSource={RelativeSource FindAncestor, AncestorType=local:DropDownItemsButton, AncestorLevel=1}}"
                                                      ItemTemplate="{Binding Path=ItemTemplate, RelativeSource={RelativeSource FindAncestor, AncestorType=local:DropDownItemsButton, AncestorLevel=1}}" 
                                                      ItemContainerStyle="{Binding Path=ItemContainerStyle, RelativeSource={RelativeSource FindAncestor, AncestorType=local:DropDownItemsButton, AncestorLevel=1}}" 
                                                      ItemContainerStyleSelector="{Binding Path=ItemContainerStyleSelector, RelativeSource={RelativeSource FindAncestor, AncestorType=local:DropDownItemsButton, AncestorLevel=1}}"
                                                      ItemsPanel="{Binding Path=ItemsPanel, RelativeSource={RelativeSource FindAncestor, AncestorType=local:DropDownItemsButton, AncestorLevel=1}}"
                                                      Template="{Binding Path=TemplateOfItemControl, RelativeSource={RelativeSource FindAncestor, AncestorType=local:DropDownItemsButton, AncestorLevel=1}}"
                                                     />
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="Arrow" Value="{DynamicResource {x:Static reskeys:ResourceKeys.GlyphDisabledForegroundKey}}" />
                        </Trigger>
                        <Trigger Property="IsOpen" Value="True">
                            <Setter TargetName="ActionButtonChrome"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static reskeys:ResourceKeys.ControlAccentBrushKey}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <!-- The arrow should not be accented when the drop down is open since
                                     this will accent foreground an dbackground color at the same time. -->
                                <Condition Property="IsOpen" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Fill" TargetName="Arrow" Value="{DynamicResource {x:Static reskeys:ResourceKeys.GlyphMouseOverForegroundKey}}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
